import * as DropdownPrimitive from "@radix-ui/react-dropdown-menu";
import { UseSelectReturnValue } from "downshift";
import * as React from "react";
type SelectState<T> = {
    multi: boolean;
    selectedItems?: T[];
    clearSelectedItems: () => void;
    selectAll: () => void;
    allSelected: boolean;
    search: boolean;
    onSearch: (searchTerm: string) => void;
    addItem: (item: T) => void;
    removeItem: (item: T) => void;
    onScrollToBottom: () => void;
} & UseSelectReturnValue<T>;
export type SelectItem = {
    value: any;
    label: string;
    [k: string]: any;
};
interface OnSelectChange {
    (value: SelectItem): void;
    (value: SelectItem[]): void;
}
export type SelectProps = {
    multi?: boolean;
    search?: boolean;
    onChange: OnSelectChange;
    onSearch?: (searchTerm: string) => void;
    onScrollToBottom?: () => void;
} & React.ComponentPropsWithoutRef<typeof DropdownPrimitive.Root>;
export declare const SelectContext: React.Context<SelectState<SelectItem> | null>;
export declare const useSelectContext: () => SelectState<SelectItem>;
type TriggerProps = {
    size?: "small" | "regular";
};
type ValueProps = {
    placeholder?: string;
    value?: string;
} & React.HTMLAttributes<HTMLDivElement>;
declare const Select: {
    ({ children, multi, onChange, search, onSearch, onScrollToBottom, ...props }: SelectProps): React.JSX.Element;
    displayName: string;
} & {
    Trigger: React.ForwardRefExoticComponent<Omit<DropdownPrimitive.DropdownMenuTriggerProps & React.RefAttributes<HTMLButtonElement>, "ref"> & TriggerProps & React.RefAttributes<HTMLButtonElement>>;
    TriggerIcon: {
        ({ className, children, ...props }: React.HTMLAttributes<HTMLDivElement>): React.JSX.Element;
        displayName: string;
    };
    Value: ({ children, placeholder, value }: ValueProps) => React.JSX.Element;
    Content: React.ForwardRefExoticComponent<Omit<DropdownPrimitive.DropdownMenuContentProps & React.RefAttributes<HTMLDivElement>, "ref"> & React.RefAttributes<HTMLDivElement>>;
    Item: React.ForwardRefExoticComponent<{
        item: SelectItem;
    } & Omit<DropdownPrimitive.DropdownMenuItemProps & React.RefAttributes<HTMLDivElement>, "ref"> & React.RefAttributes<HTMLDivElement>>;
    Separator: React.ForwardRefExoticComponent<Omit<DropdownPrimitive.DropdownMenuSeparatorProps & React.RefAttributes<HTMLDivElement>, "ref"> & React.RefAttributes<HTMLDivElement>>;
    SelectAll: {
        ({ children, className, ...props }: React.HTMLAttributes<HTMLDivElement>): React.JSX.Element | null;
        displayName: string;
    };
    Label: React.ForwardRefExoticComponent<Omit<DropdownPrimitive.DropdownMenuLabelProps & React.RefAttributes<HTMLDivElement>, "ref"> & React.RefAttributes<HTMLDivElement>>;
};
export { Select };
